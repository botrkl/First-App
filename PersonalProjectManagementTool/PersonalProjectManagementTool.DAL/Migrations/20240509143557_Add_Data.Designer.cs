// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using PersonalProjectManagementTool.DAL.Context;

#nullable disable

namespace PersonalProjectManagementTool.DAL.Migrations
{
    [DbContext(typeof(BoardDbContext))]
    [Migration("20240509143557_Add_Data")]
    partial class Add_Data
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("PersonalProjectManagementTool.DAL.Entities.Card", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("DueDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid>("ListId")
                        .HasColumnType("uuid");

                    b.Property<string>("Priority")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("ListId");

                    b.ToTable("Card");

                    b.HasData(
                        new
                        {
                            Id = new Guid("a7d39050-544e-4f0f-bbc2-5e96d7aa3a0a"),
                            Description = "Prepare a presentation for the project meeting. Includes deadlines, statistics, and key points.",
                            DueDate = new DateTime(2024, 5, 9, 14, 35, 56, 478, DateTimeKind.Utc).AddTicks(2145),
                            ListId = new Guid("5f643a7a-27fd-4c48-8e88-a6e7c47e0a5c"),
                            Priority = "Medium",
                            Title = "Project Presentation"
                        },
                        new
                        {
                            Id = new Guid("3957986d-c570-4707-8b6f-0ca11e427bf3"),
                            Description = "Update the user interface design considering the latest trends and user feedback.",
                            DueDate = new DateTime(2024, 5, 9, 14, 35, 56, 479, DateTimeKind.Utc).AddTicks(4255),
                            ListId = new Guid("5f643a7a-27fd-4c48-8e88-a6e7c47e0a5c"),
                            Priority = "Hight",
                            Title = "Interface Update"
                        },
                        new
                        {
                            Id = new Guid("bfb213eb-8c1e-46ca-b48c-a8ef4d89b7e1"),
                            Description = "Conduct testing of new features to ensure compliance with requirements and identify any potential issues before release.",
                            DueDate = new DateTime(2024, 5, 9, 14, 35, 56, 479, DateTimeKind.Utc).AddTicks(4271),
                            ListId = new Guid("5f643a7a-27fd-4c48-8e88-a6e7c47e0a5c"),
                            Priority = "Medium",
                            Title = "Functionality Testing"
                        },
                        new
                        {
                            Id = new Guid("547d7b7c-284c-488a-a25f-c7c57a214ab1"),
                            Description = "Address identified bugs in the application, including crashes and incorrect data display.",
                            DueDate = new DateTime(2024, 5, 9, 14, 35, 56, 479, DateTimeKind.Utc).AddTicks(4275),
                            ListId = new Guid("0cdb7167-0ba7-4fbe-bd09-d088fa7735d7"),
                            Priority = "Low",
                            Title = "Bug Fixing"
                        },
                        new
                        {
                            Id = new Guid("df6e76a2-5f3a-4467-8abd-6167e6ae01bb"),
                            Description = "Organize a team meeting to discuss project development strategy and task allocation for the near future.",
                            DueDate = new DateTime(2024, 5, 9, 14, 35, 56, 479, DateTimeKind.Utc).AddTicks(4279),
                            ListId = new Guid("0cdb7167-0ba7-4fbe-bd09-d088fa7735d7"),
                            Priority = "Medium",
                            Title = "Event Planning"
                        },
                        new
                        {
                            Id = new Guid("e5455f01-a16f-4cef-b5e4-c38684733b9d"),
                            Description = "Prepare project documentation for new team members and update existing materials according to changes.",
                            DueDate = new DateTime(2024, 5, 9, 14, 35, 56, 479, DateTimeKind.Utc).AddTicks(4587),
                            ListId = new Guid("d2f7dc78-033f-45d5-8f21-7c6d49d8dc8d"),
                            Priority = "Low",
                            Title = "Documentation Preparation"
                        },
                        new
                        {
                            Id = new Guid("0def3a95-8553-428b-8992-69a2c26e5a89"),
                            Description = "Conduct analysis of competitors' activities in the market and identify their strengths and weaknesses to develop a strategy.",
                            DueDate = new DateTime(2024, 5, 9, 14, 35, 56, 479, DateTimeKind.Utc).AddTicks(4593),
                            ListId = new Guid("d6fcb3ec-f628-448a-83eb-50c2c05c2f06"),
                            Priority = "Medium",
                            Title = "Competitor Analysis"
                        },
                        new
                        {
                            Id = new Guid("6418cbcd-a40d-414a-808a-7b3b758bb837"),
                            Description = "Optimize code and project structure to improve performance and reduce application response time.",
                            DueDate = new DateTime(2024, 5, 9, 14, 35, 56, 479, DateTimeKind.Utc).AddTicks(4598),
                            ListId = new Guid("d6fcb3ec-f628-448a-83eb-50c2c05c2f06"),
                            Priority = "Low",
                            Title = "Performance Enhancement"
                        });
                });

            modelBuilder.Entity("PersonalProjectManagementTool.DAL.Entities.CardActivity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid>("CardId")
                        .HasColumnType("uuid");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("TimeOfAction")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Id");

                    b.HasIndex("CardId");

                    b.ToTable("CardActivity");

                    b.HasData(
                        new
                        {
                            Id = new Guid("6296f7a5-defc-4607-85f6-90a114b2fa0b"),
                            CardId = new Guid("a7d39050-544e-4f0f-bbc2-5e96d7aa3a0a"),
                            Description = "Card Project Presentation was created.",
                            TimeOfAction = new DateTime(2024, 5, 9, 14, 35, 56, 480, DateTimeKind.Utc).AddTicks(9389)
                        },
                        new
                        {
                            Id = new Guid("65e15659-5090-4afc-8fbf-e573bbc0c151"),
                            CardId = new Guid("3957986d-c570-4707-8b6f-0ca11e427bf3"),
                            Description = "Card Interface Update was created.",
                            TimeOfAction = new DateTime(2024, 5, 9, 14, 35, 56, 481, DateTimeKind.Utc).AddTicks(132)
                        },
                        new
                        {
                            Id = new Guid("4d240282-cc75-41a6-b502-79f29d835bd1"),
                            CardId = new Guid("bfb213eb-8c1e-46ca-b48c-a8ef4d89b7e1"),
                            Description = "Card Functionality Testing was created.",
                            TimeOfAction = new DateTime(2024, 5, 9, 14, 35, 56, 481, DateTimeKind.Utc).AddTicks(139)
                        },
                        new
                        {
                            Id = new Guid("51296456-7396-4fcb-9e00-8bb298e65186"),
                            CardId = new Guid("547d7b7c-284c-488a-a25f-c7c57a214ab1"),
                            Description = "Card Bug Fixing was created.",
                            TimeOfAction = new DateTime(2024, 5, 9, 14, 35, 56, 481, DateTimeKind.Utc).AddTicks(142)
                        },
                        new
                        {
                            Id = new Guid("d8d5bef8-b957-44e6-8127-0401860778df"),
                            CardId = new Guid("df6e76a2-5f3a-4467-8abd-6167e6ae01bb"),
                            Description = "Card Event Planning was created.",
                            TimeOfAction = new DateTime(2024, 5, 9, 14, 35, 56, 481, DateTimeKind.Utc).AddTicks(144)
                        },
                        new
                        {
                            Id = new Guid("6317f454-611d-48bc-934a-80df91650cbe"),
                            CardId = new Guid("e5455f01-a16f-4cef-b5e4-c38684733b9d"),
                            Description = "Card Documentation Preparation was created.",
                            TimeOfAction = new DateTime(2024, 5, 9, 14, 35, 56, 481, DateTimeKind.Utc).AddTicks(155)
                        },
                        new
                        {
                            Id = new Guid("1ef85869-c82a-42af-989d-9b99565c763e"),
                            CardId = new Guid("0def3a95-8553-428b-8992-69a2c26e5a89"),
                            Description = "Card Competitor Analysis was created.",
                            TimeOfAction = new DateTime(2024, 5, 9, 14, 35, 56, 481, DateTimeKind.Utc).AddTicks(158)
                        },
                        new
                        {
                            Id = new Guid("ef5b6b1f-a834-447d-b16a-ce92677c9111"),
                            CardId = new Guid("6418cbcd-a40d-414a-808a-7b3b758bb837"),
                            Description = "Card Performance Enhancement was created.",
                            TimeOfAction = new DateTime(2024, 5, 9, 14, 35, 56, 481, DateTimeKind.Utc).AddTicks(160)
                        });
                });

            modelBuilder.Entity("PersonalProjectManagementTool.DAL.Entities.ListOfCards", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("ListOfCards");

                    b.HasData(
                        new
                        {
                            Id = new Guid("5f643a7a-27fd-4c48-8e88-a6e7c47e0a5c"),
                            Title = "To Do"
                        },
                        new
                        {
                            Id = new Guid("0cdb7167-0ba7-4fbe-bd09-d088fa7735d7"),
                            Title = "In Progress"
                        },
                        new
                        {
                            Id = new Guid("d2f7dc78-033f-45d5-8f21-7c6d49d8dc8d"),
                            Title = "In Review"
                        },
                        new
                        {
                            Id = new Guid("d6fcb3ec-f628-448a-83eb-50c2c05c2f06"),
                            Title = "Done"
                        });
                });

            modelBuilder.Entity("PersonalProjectManagementTool.DAL.Entities.Card", b =>
                {
                    b.HasOne("PersonalProjectManagementTool.DAL.Entities.ListOfCards", "ListOfCards")
                        .WithMany("Cards")
                        .HasForeignKey("ListId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ListOfCards");
                });

            modelBuilder.Entity("PersonalProjectManagementTool.DAL.Entities.CardActivity", b =>
                {
                    b.HasOne("PersonalProjectManagementTool.DAL.Entities.Card", "Card")
                        .WithMany("CardActivities")
                        .HasForeignKey("CardId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Card");
                });

            modelBuilder.Entity("PersonalProjectManagementTool.DAL.Entities.Card", b =>
                {
                    b.Navigation("CardActivities");
                });

            modelBuilder.Entity("PersonalProjectManagementTool.DAL.Entities.ListOfCards", b =>
                {
                    b.Navigation("Cards");
                });
#pragma warning restore 612, 618
        }
    }
}
